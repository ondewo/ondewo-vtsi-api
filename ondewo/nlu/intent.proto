// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Modifications Copyright 2020-2023 ONDEWO GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ondewo.nlu;

import "google/api/annotations.proto";
import "ondewo/nlu/context.proto";
import "ondewo/nlu/common.proto";
import "ondewo/nlu/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";

// An intent represents a mapping between input from a user and an action to
// be taken by your application. When you pass user input to the
// [DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] (or
// [StreamingDetectIntent][google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent]) method, the
// Dialogflow API analyzes the input and searches
// for a matching intent. If no match is found, the Dialogflow API returns a
// fallback intent (`is_fallback` = true).
//
// You can provide additional information for the Dialogflow API to use to
// match user input to an intent by adding the following to your intent.
//
// *   **Contexts** - provide additional context for intent analysis. For
//     example, if an intent is related to an object in your application that
//     plays music, you can provide a context to determine when to match the
//     intent if the user input is “turn it off”.  You can include a context
//     that matches the intent when there is previous user input of
//     "play music", and not when there is previous user input of
//     "turn on the light".
//
// *   **Events** - allow for matching an intent by using an event name
//     instead of user input. Your application can provide an event name and
//     related parameters to the Dialogflow API to match an intent. For
//     example, when your application starts, you can send a welcome event
//     with a user name parameter to the Dialogflow API to match an intent with
//     a personalized welcome message for the user.
//
// *   **Training phrases** - provide examples of user input to train the
//     Dialogflow API agent to better match intents.
//
// For more information about intents, see the
// [Dialogflow documentation](https://dialogflow.com/docs/intents).
service Intents {
    // Returns the list of all intents in the specified agent.
    rpc ListIntents (ListIntentsRequest) returns (ListIntentsResponse) {
        option (google.api.http) = {
            get: "/v2/{parent=projects/*/agent}/intents"
        };
    }

    // Retrieves the specified intent.
    rpc GetIntent (GetIntentRequest) returns (Intent) {
        option (google.api.http) = {
            get: "/v2/{name=projects/*/agent/intents/*}"
        };
    }

    // Creates an intent in the specified agent.
    rpc CreateIntent (CreateIntentRequest) returns (Intent) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/intents"
            body: "*"
        };
    }

    // Updates the specified intent.
    rpc UpdateIntent (UpdateIntentRequest) returns (Intent) {
        option (google.api.http) = {
            patch: "/v2/{intent.name=projects/*/agent/intents/*}"
            body: "*"
        };
    }

    // Deletes the specified intent.
    rpc DeleteIntent (DeleteIntentRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v2/{name=projects/*/agent/intents/*}"
        };
    }

    // Updates/Creates multiple intents in the specified agent.
    //
    // Operation <response: [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]>
    rpc BatchUpdateIntents (BatchUpdateIntentsRequest) returns (BatchUpdateIntentsResponse) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/intents:batchUpdate"
            body: "*"
        };
    }

    // Deletes intents in the specified agent.
    //
    // Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
    rpc BatchDeleteIntents (BatchDeleteIntentsRequest) returns (ondewo.nlu.Operation) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/intents:batchDelete"
            body: "*"
        };
    }

    // Tags a specific intent with tag(s)
    rpc TagIntent (IntentTagRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/intents:tagIntent"
            body: "*"
        };
    }

    // Deletes tag(s) for a specific intent
    rpc DeleteIntentTag (IntentTagRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/intents:deleteIntentTag"
            body: "*"
        };
    }

    // Gets all the tags for a specific intent
    rpc GetIntentTags (GetIntentTagsRequest) returns (GetIntentTagsResponse) {}

    // Gets all the tags for all the intents
    rpc GetAllIntentTags (GetAllIntentTagsRequest) returns (GetIntentTagsResponse) {}

    /************************* Training Phrase RPC Endpoints ****************************/

    // Creates batch of training phrases
    rpc BatchCreateTrainingPhrases (BatchCreateTrainingPhrasesRequest) returns (BatchTrainingPhrasesStatusResponse);

    // Retrieve a training phrases batch of the specified names.
    rpc BatchGetTrainingPhrases (BatchGetTrainingPhrasesRequest) returns (BatchTrainingPhrasesStatusResponse);

    // Updates batch of training phrases
    rpc BatchUpdateTrainingPhrases (BatchUpdateTrainingPhrasesRequest) returns (BatchTrainingPhrasesStatusResponse);

    // Delete a training phrases batch of the specified names.
    rpc BatchDeleteTrainingPhrases (BatchDeleteTrainingPhrasesRequest) returns (BatchDeleteTrainingPhrasesResponse);

    // List training phrases (of a specific intent).
    rpc ListTrainingPhrases (ListTrainingPhrasesRequest) returns (ListTrainingPhrasesResponse);


    /************************* Response RPC Endpoints ****************************/

    // Creates batch of intent messages
    rpc BatchCreateResponseMessages (BatchCreateResponseMessagesRequest) returns (BatchResponseMessagesStatusResponse);

    // Retrieve a intent messages batch of the specified names.
    rpc BatchGetResponseMessages (BatchGetResponseMessagesRequest) returns (BatchResponseMessagesStatusResponse);

    // Updates batch of intent messages
    rpc BatchUpdateResponseMessages (BatchUpdateResponseMessagesRequest) returns (BatchResponseMessagesStatusResponse);

    // Delete a intent messages batch of the specified names.
    rpc BatchDeleteResponseMessages (BatchDeleteResponseMessagesRequest) returns (BatchDeleteResponseMessagesResponse);

    // List messages (of a specific intent).
    rpc ListResponseMessages (ListResponseMessagesRequest) returns (ListResponseMessagesResponse);


    /************************* Parameter RPC Endpoints ****************************/

    // Creates batch of intent messages
    rpc BatchCreateParameters (BatchCreateParametersRequest) returns (BatchParametersStatusResponse);

    // Retrieve a intent messages batch of the specified names.
    rpc BatchGetParameters (BatchGetParametersRequest) returns (BatchParametersStatusResponse);

    // Updates batch of intent messages
    rpc BatchUpdateParameters (BatchUpdateParametersRequest) returns (BatchParametersStatusResponse);

    // Delete a intent messages batch of the specified names.
    rpc BatchDeleteParameters (BatchDeleteParametersRequest) returns (BatchDeleteParametersResponse);

    // List messages (of a specific intent).
    rpc ListParameters (ListParametersRequest) returns (ListParametersResponse);

    // List Training phrases (of a specific intent).
    rpc ListTrainingPhrasesofIntentsWithEnrichment (ListTrainingPhrasesofIntentsWithEnrichmentRequest) returns (ListTrainingPhrasesofIntentsWithEnrichmentResponse);

}

// Represents an intent.
// Intents convert a number of user expressions or patterns into an action. An
// action is an extraction of a user command or sentence semantics.
message Intent {

    // Represents an example or template that the agent is trained on.
    message TrainingPhrase {

        // Represents an entity annotation in a training phrase. The entity can be annotated on the level of
        // entity type only or both entity type and entity value.
        message Entity {

            // Required. The unique entity type identifier in format
            // `projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;`.
            string entity_type_name = 1;

            // Optional. The entity type name.
            string entity_type_display_name = 3;

            // Optional. The unique entity value identifier in format
            // `projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;/entities/&lt;entity_uuid&gt;`.
            // The entity value must belong to the entity type defined in entity_type_name.
            string entity_value_name = 4;

            // Optional. The entity value name.
            string entity_value_display_name = 5;

            // Required. Defines a character position, where the entity starts in the training phrase text
            // (0-indexed).
            int32 start = 6;

            // Required. Defines a character position + 1, where the entity ends in the training phrase.
            // Example: "Meet you tomorrow" -> Entity(entity_type_display_name="sys.date", start=9, end=17)
            int32 end = 7;

            // Optional. The unique parameter identifier in format
            // `projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/parameters/&lt;parameter_uuid&gt;`
            // for the value extracted from the annotated part of the example. The parameter must be one of the
            // parameters defined in the top-level intent message.
            // Can be unset if the parameter is created in the same create/update intent request as the
            // annotation.
            string parameter_name = 8;

            // Optional. The parameter name.
            string parameter_display_name = 9;

            // Creation date and time. Read-only field.
            google.protobuf.Timestamp created_at = 10;

            // Modification date and time. Read-only field.
            google.protobuf.Timestamp modified_at = 11;

            // User id in form of a valid UUID.
            string created_by = 12;

            // User id in form of a valid UUID.
            string modified_by = 13;
        }

        // Represents different types of training phrases.
        enum Type {
            // Not specified. This value should never be used.
            TYPE_UNSPECIFIED = 0;

            // Examples do not contain @-prefixed entity type names, but example parts
            // can be annotated with entity types.
            EXAMPLE = 1;

            // Templates are not annotated with entity types, but they can contain
            // @-prefixed entity type names as substrings.
            TEMPLATE = 2;
        }

        // Required. The unique identifier of this training phrase.
        // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/trainingPhrases/&lt;training_phrase_uuid&gt;</code></pre>
        string name = 1;

        // Required. The type of the training phrase.
        Type type = 2;

        // Required. The text of the training phrase.
        string text = 3;

        // Optional. The collection of annotated entities in the training phrase.
        repeated Entity entities = 4;

        // Optional. Indicates how many times this example or template was added to
        // the intent. Each time a developer adds an existing sample by editing an
        // intent or training, this counter is increased.
        int32 times_added_count = 5;

        // Optional. The language of the training phrase.
        string language_code = 6;

        // Creation date and time. Read-only field.
        google.protobuf.Timestamp created_at = 7;

        // Modification date and time. Read-only field.
        google.protobuf.Timestamp modified_at = 8;

        // User id in form of a valid UUID.
        string created_by = 9;

        // User id in form of a valid UUID.
        string modified_by = 10;
    }

    // Structure of status of an Intent
    enum IntentStatus {
        ACTIVE = 0;
        INACTIVE = 1;
    }

    // Represents intent parameters.
    message Parameter {

        // Represents the prompts in the parameters.
        message Prompt {

            // The unique identifier of this prompt.
            // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/parameters/&lt;parameter_uuid&gt;/prompts/&lt;prompt_uuid&gt;</code></pre>
            string name = 1;

            // Required. Text of the prompt
            string text = 2;

            // The language of the prompts. If not specified, the default language code will be used.
            string language_code = 3;

            // Creation date and time. Read-only field.
            google.protobuf.Timestamp created_at = 4;

            // Modification date and time. Read-only field.
            google.protobuf.Timestamp modified_at = 5;

            // User id in form of a valid UUID.
            string created_by = 6 ;

            // User id in form of a valid UUID.
            string modified_by = 7;
        }
        // The unique identifier of this parameter.
        // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/parameters/&lt;parameter_uuid&gt;</code></pre>
        string name = 1;

        // Required. The name of the parameter.
        string display_name = 2;

        // Optional. The definition of the parameter value. It can be:
        // - a constant string,
        // - a parameter value defined as `$parameter_name`,
        // - an original parameter value defined as `$parameter_name.original`,
        // - a parameter value from some context defined as
        //   `#context_name.parameter_name`.
        string value = 3;

        // Optional. The default value to use when the `value` yields an empty
        // result.
        // Default values can be extracted from contexts by using the following
        // syntax: `#context_name.parameter_name`.
        string default_value = 4;

        // Optional. The unique identifier of the entity type in format
        // `projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;` that describes values
        // of the parameter. If the parameter is required, this must be provided.
        string entity_type_name = 5;

        // Optional. The name of the entity type that describes values of the parameter. If the parameter is
        // required, this must be provided.
        string entity_type_display_name = 6;

        // Optional. Indicates whether the parameter is required. That is,
        // whether the intent cannot be completed without collecting the parameter
        // value.
        bool mandatory = 7;

        // Optional. The collection of prompts that the agent can present to the
        // user in order to collect value for the parameter.
        repeated Prompt prompts = 8;

        // Optional. Indicates whether the parameter represents a list of values.
        bool is_list = 9;

        // Creation date and time. Read-only field.
        google.protobuf.Timestamp created_at = 10;

        // Modification date and time. Read-only field.
        google.protobuf.Timestamp modified_at = 11;

        // User id in form of a valid UUID.
        string created_by = 12;

        // User id in form of a valid UUID.
        string modified_by = 13;
    }

    // Corresponds to the `Response` field in the Dialogflow console.
    message Message {
        // The text response message.
        message Text {
            // Optional. The collection of the agent's responses.
            repeated string text = 1;
        }

        // The image response message.
        message Image {
            // Optional. The public URI to an image file.
            string image_uri = 1;

            // Optional. A text description of the image to be used for accessibility,
            // e.g., screen readers.
            string accessibility_text = 2;
        }

        // The quick replies response message.
        message QuickReplies {
            // Optional. The title of the collection of quick replies.
            string title = 1;

            // Optional. The collection of quick replies.
            repeated string quick_replies = 2;
        }

        // The card response message.
        message Card {

            // Optional. Contains information about a button.
            message Button {

                // Note: One of the following is required:
                // Optional. The text to show on the button.
                string text = 1;

                // Optional. The text to send back to the Dialogflow API or a URI to open.
                string postback = 2;
            }

            // Optional. The title of the card.
            string title = 1;

            // Optional. The subtitle of the card.
            string subtitle = 2;

            // Optional. The public URI to an image file for the card.
            string image_uri = 3;

            // Optional. The collection of card buttons.
            repeated Button buttons = 4;
        }

        // The simple response message containing speech or text.
        message SimpleResponse {

            // One of text_to_speech or ssml must be provided. The plain text of the
            // speech output. Mutually exclusive with ssml.
            string text_to_speech = 1;

            // One of text_to_speech or ssml must be provided. Structured spoken
            // response to the user in the SSML format. Mutually exclusive with
            // text_to_speech.
            string ssml = 2;

            // Optional. The text to display.
            string display_text = 3;
        }

        // The collection of simple response candidates.
        // This message in `QueryResult.fulfillment_messages` and
        // `WebhookResponse.fulfillment_messages` should contain only one
        // `SimpleResponse`.
        message SimpleResponses {
            // Required. The list of simple responses.
            repeated SimpleResponse simple_responses = 1;
        }

        // The basic card message. Useful for displaying information.
        message BasicCard {
            // The button object that appears at the bottom of a card.
            message Button {
                // Opens the given URI.
                message OpenUriAction {
                    // Required. The HTTP or HTTPS scheme URI.
                    string uri = 1;
                }

                // Required. The title of the button.
                string title = 1;

                // Required. Action to take when a user taps on the button.
                OpenUriAction open_uri_action = 2;
            }

            // Optional. The title of the card.
            string title = 1;

            // Optional. The subtitle of the card.
            string subtitle = 2;

            // Required, unless image is present. The body text of the card.
            string formatted_text = 3;

            // Optional. The image for the card.
            Image image = 4;

            // Optional. The collection of card buttons.
            repeated Button buttons = 5;
        }

        // The suggestion chip message that the user can tap to quickly post a reply
        // to the conversation.
        message Suggestion {
            // Required. The text shown the in the suggestion chip.
            string title = 1;
        }

        // The collection of suggestions.
        message Suggestions {
            // Required. The list of suggested replies.
            repeated Suggestion suggestions = 1;
        }

        // The suggestion chip message that allows the user to jump out to the app
        // or website associated with this agent.
        message LinkOutSuggestion {
            // Required. The name of the app or site this chip is linking to.
            string destination_name = 1;

            // Required. The URI of the app or site to open when the user taps the
            // suggestion chip.
            string uri = 2;
        }

        // The card for presenting a list of options to select from.
        message ListSelect {
            // An item in the list.
            message Item {
                // Required. Additional information about this option.
                SelectItemInfo info = 1;

                // Required. The title of the list item.
                string title = 2;

                // Optional. The main text describing the item.
                string description = 3;

                // Optional. The image to display.
                Image image = 4;
            }

            // Optional. The overall title of the list.
            string title = 1;

            // Required. List items.
            repeated Item items = 2;
        }

        // The card for presenting a carousel of options to select from.
        message CarouselSelect {
            // An item in the carousel.
            message Item {
                // Required. Additional info about the option item.
                SelectItemInfo info = 1;

                // Required. Title of the carousel item.
                string title = 2;

                // Optional. The body text of the card.
                string description = 3;

                // Optional. The image to display.
                Image image = 4;
            }

            // Required. Carousel items.
            repeated Item items = 1;
        }

        // This message contains HTML text
        message HTMLText {
            // Collection of the agent's responses in HTML format
            repeated string text = 1;
        }

        // The Video response message.
        message Video {
            // Optional. The public URI to a video file.
            string uri = 1;

            // Optional. A text description of the video to be used for accessibility,
            // e.g., screen readers.
            string accessibility_text = 2;
        }

        // The Audio response message.
        message Audio {
            // Optional. The public URI to an audio file.
            string uri = 1;

            // Optional. A text description of the audio to be used for accessibility,
            // e.g., screen readers.
            string accessibility_text = 2;
        }

        // Additional info about the select item for when it is triggered in a
        // dialog.
        message SelectItemInfo {
            // Required. A unique key that will be sent back to the agent if this
            // response is given.
            string key = 1;

            // Optional. A list of synonyms that can also be used to trigger this
            // item in dialog.
            repeated string synonyms = 2;
        }

        // Represents different platforms that a rich message can be intended for.
        enum Platform {
            // Not specified.
            PLATFORM_UNSPECIFIED = 0;

            // Facebook.
            FACEBOOK = 1;

            // Slack.
            SLACK = 2;

            // Telegram.
            TELEGRAM = 3;

            // Kik.
            KIK = 4;

            // Skype.
            SKYPE = 5;

            // Line.
            LINE = 6;

            // Viber.
            VIBER = 7;

            // Actions on Google.
            // When using Actions on Google, you can choose one of the specific
            // Intent.Message types that mention support for Actions on Google,
            // or you can use the advanced Intent.Message.payload field.
            // The payload field provides access to AoG features not available in the
            // specific message types.
            // If using the Intent.Message.payload field, it should have a structure
            // similar to the JSON message shown here. For more information, see
            // [Actions on Google Webhook
            // Format](https://developers.google.com/actions/dialogflow/webhook)
            // <pre>{
            //   "expectUserResponse": true,
            //   "isSsml": false,
            //   "noInputPrompts": [],
            //   "richResponse": {
            //     "items": [
            //       {
            //         "simpleResponse": {
            //           "displayText": "hi",
            //           "textToSpeech": "hello"
            //         }
            //       }
            //     ],
            //     "suggestions": [
            //       {
            //         "title": "Say this"
            //       },
            //       {
            //         "title": "or this"
            //       }
            //     ]
            //   },
            //   "systemIntent": {
            //     "data": {
            //       "@type": "type.googleapis.com/google.actions.v2.OptionValueSpec",
            //       "listSelect": {
            //         "items": [
            //           {
            //             "optionInfo": {
            //               "key": "key1",
            //               "synonyms": [
            //                 "key one"
            //               ]
            //             },
            //             "title": "must not be empty, but unique"
            //           },
            //           {
            //             "optionInfo": {
            //               "key": "key2",
            //               "synonyms": [
            //                 "key two"
            //               ]
            //             },
            //             "title": "must not be empty, but unique"
            //           }
            //         ]
            //       }
            //     },
            //     "intent": "actions.intent.OPTION"
            //   }
            // }</pre>
            ACTIONS_ON_GOOGLE = 8;

            PLACEHOLDER_1 = 9;

            PLACEHOLDER_2 = 10;

            PLACEHOLDER_3 = 11;

            PLACEHOLDER_4 = 12;

            PLACEHOLDER_5 = 13;

            PLACEHOLDER_6 = 14;

            PLACEHOLDER_7 = 15;

            PLACEHOLDER_8 = 16;

            PLACEHOLDER_9 = 17;

            PLACEHOLDER_10 = 18;

            PLACEHOLDER_11 = 19;

            PLACEHOLDER_12 = 20;

            PLACEHOLDER_13 = 21;

            PLACEHOLDER_14 = 22;

            PLACEHOLDER_15 = 23;

            PLACEHOLDER_16 = 24;

            PLACEHOLDER_17 = 25;

            PLACEHOLDER_18 = 26;

            PLACEHOLDER_19 = 27;

            PLACEHOLDER_20 = 28;
        }

        // Required. The name of the return message.
        // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/responseMessages/&lt;message_uuid&gt;</code></pre>
        string name = 16;

        // Required. The language of the return message.
        string language_code = 17;

        // Required. The rich response message.
        oneof message {
            // The text response.
            Text text = 1;

            // The image response.
            Image image = 2;

            // The quick replies response.
            QuickReplies quick_replies = 3;

            // The card response.
            Card card = 4;

            // Returns a response containing a custom, platform-specific payload.
            // See the Intent.Message.Platform type for a description of the
            // structure that may be required for your platform.
            google.protobuf.Struct payload = 5;

            // The voice and text-only responses for Actions on Google.
            SimpleResponses simple_responses = 7;

            // The basic card response for Actions on Google.
            BasicCard basic_card = 8;

            // The suggestion chips for Actions on Google.
            Suggestions suggestions = 9;

            // The link out suggestion chip for Actions on Google.
            LinkOutSuggestion link_out_suggestion = 10;

            // The list card response for Actions on Google.
            ListSelect list_select = 11;

            // The carousel card response for Actions on Google.
            CarouselSelect carousel_select = 12;

            // The HTML text response
            HTMLText html_text = 13;

            // The Video response
            Video video = 14;

            // The Audio response
            Audio audio = 15;
        }

        // Optional. The platform that this message is intended for.
        Platform platform = 6;

        // Read-only. States if a returned message is a prompt or not.
        bool is_prompt = 18;

        // Creation date and time. Read-only field.
        google.protobuf.Timestamp created_at = 19;

        // Modification date and time. Read-only field.
        google.protobuf.Timestamp modified_at = 20;

        // User id in form of a valid UUID.
        string created_by = 21;

        // User id in form of a valid UUID.
        string modified_by = 22;
    }

    // Represents a single followup intent in the chain.
    message FollowupIntentInfo {
        // The unique identifier of the followup intent.
        // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
        string followup_intent_name = 1;

        // The unique identifier of the followup intent parent.
        // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
        string parent_followup_intent_name = 2;
    }

    // Represents the different states that webhooks can be in.
    enum WebhookState {
        // Webhook is disabled in the agent and in the intent.
        WEBHOOK_STATE_UNSPECIFIED = 0;

        // Webhook is enabled in the agent and in the intent.
        WEBHOOK_STATE_ENABLED = 1;

        // Webhook is enabled in the agent and in the intent. Also, each slot
        // filling prompt is forwarded to the webhook.
        WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING = 2;
    }

    // Required for all methods except `create` (`create` populates the name
    // automatically.
    // The unique identifier of this intent.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string name = 1;

    // Required. The name of this intent.
    string display_name = 2;

    // Required. Indicates whether webhooks are enabled for the intent.
    WebhookState webhook_state = 6;

    // Optional. The priority of this intent. Higher numbers represent higher
    // priorities. Zero or negative numbers mean that the intent is disabled.
    int32 priority = 3;

    // Optional. Indicates whether this is a fallback intent.
    bool is_fallback = 4;

    // Optional. Indicates whether Machine Learning is disabled for the intent.
    // Note: If `ml_disabled` setting is set to true, then this intent is not
    // taken into account during inference in `ML ONLY` match mode. Also,
    // auto-markup in the UI is turned off.
    bool ml_disabled = 19;

    // Optional. The list of context names required for this intent to be
    // triggered.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/sessions/-/contexts/&lt;context_uuid&gt;</code></pre>
    repeated string input_context_names = 7;

    // Optional. The collection of event names that trigger the intent.
    // If the collection of input contexts is not empty, all of the contexts must
    // be present in the active user session for an event to trigger this intent.
    repeated string events = 8;

    // Optional. The collection of examples/templates that the agent is
    // trained on.
    repeated TrainingPhrase training_phrases = 9;

    // Optional. The name of the action associated with the intent.
    string action = 10;

    // Optional. The collection of contexts that are activated when the intent
    // is matched. Context messages in this collection should not set the
    // parameters field. Setting the `lifespan_count` to 0 will reset the context
    // when the intent is matched.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/sessions/-/contexts/&lt;context_uuid&gt;</code></pre>
    repeated Context output_contexts = 11;

    // Optional. Indicates whether to delete all contexts in the current
    // session when this intent is matched.
    bool reset_contexts = 12;

    // Optional. The collection of parameters associated with the intent.
    repeated Parameter parameters = 13;

    // Optional. The collection of rich messages corresponding to the
    // `Response` field in the Dialogflow console.
    repeated Message messages = 14;

    // Optional. The list of platforms for which the first response will be
    // taken from among the messages assigned to the DEFAULT_PLATFORM.
    repeated Message.Platform default_response_platforms = 15;

    // The unique identifier of the root intent in the chain of followup intents.
    // It identifies the correct followup intents chain for this intent.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string root_followup_intent_name = 16;

    // The unique identifier of the parent intent in the chain of followup
    // intents.
    // It identifies the parent followup intent.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string parent_followup_intent_name = 17;

    // Optional. Collection of information about all followup intents that have
    // name of this intent as a root_name.
    repeated FollowupIntentInfo followup_intent_info = 18;

    // The next_page_token is used to retrieve the next page of a returned result,
    // e.g. next_page_token is current_index-2
    string next_page_token = 30;

    // Optional. Domain to which the intent belongs
    string domain_name = 31;

    // Optional. Indicates whether the intent starts a deviation in conversation flow
    bool is_start_of_deviation = 32;

    // Optional. Indicates whether the intent ends a deviation in conversation flow
    bool is_end_of_deviation = 33;

    // Optional. Total count of training phrases associated to the intent.
    int32 training_phrase_count = 34;

    // Indicates whether the intent is active or not
    IntentStatus status = 35;

    // Optional. Provides information that can be used in custom scripts
    google.protobuf.Timestamp start_date = 36;

    // Optional. Provides information that can be used in custom scripts
    google.protobuf.Timestamp end_date = 37;

    // Optional. Adds arbitrary "categories" for which one could filter the intents
    repeated string tags = 38;

    // Creation date and time. Read-only field.
    google.protobuf.Timestamp created_at = 39;

    // Modification date and time. Read-only field.
    google.protobuf.Timestamp modified_at = 40;

    // User id in form of a valid UUID.
    string created_by = 41;

    // User id in form of a valid UUID.
    string modified_by = 42;
}

// The request message for [Intents.ListIntents][google.cloud.dialogflow.v2.Intents.ListIntents].
message ListIntentsRequest {
    // Required. The agent to list all intents from.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string parent = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent before they can be used.
    string language_code = 2;

    // Optional. The resource view to apply to the returned intent.
    IntentView intent_view = 3;

    // Optional: The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 5;

    // Optional. Applies a filter to the list. Default, no filter.
    IntentCategory filter_by_category = 6;

    // Optional. Defines the sorting of the list. Default, no sorting.
    IntentSorting sort_by_field = 7;

    // Optional. Applies a filter to the list by tags. Default, no filter.
    repeated string filter_by_tags = 8;
}

// The response message for [Intents.ListIntents][google.cloud.dialogflow.v2.Intents.ListIntents].
message ListIntentsResponse {
    // The list of agent intents. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated Intent intents = 1;

    // The next_page_token is used to retrieve the next page of a returned result,
    // e.g. next_page_token is current_index-2
    string next_page_token = 2;
}

// The request message for [Intents.GetIntent][google.cloud.dialogflow.v2.Intents.GetIntent].
message GetIntentRequest {
    // Required. The name of the intent.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string name = 1;

    // Optional. The language to retrieve training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 2;

    // Optional. The resource view to apply to the returned intent.
    IntentView intent_view = 3;

    // The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 10;
}

// The request message for [Intents.CreateIntent][google.cloud.dialogflow.v2.Intents.CreateIntent].
message CreateIntentRequest {
    // Required. The agent to create a intent for.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string parent = 1;

    // Required. The intent to create.
    Intent intent = 2;

    // Optional. The language of training phrases, parameters and rich messages
    // defined in `intent`. If not specified, the agent's default language is
    // used. [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 3;

    // Optional. The resource view to apply to the returned intent.
    IntentView intent_view = 4;
}

// The request message for [Intents.UpdateIntent][google.cloud.dialogflow.v2.Intents.UpdateIntent].
message UpdateIntentRequest {
    // Required. The intent to update.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    Intent intent = 1;

    // Optional. The language of training phrases, parameters and rich messages
    // defined in `intent`. If not specified, the agent's default language is
    // used. [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 2;

    // Optional. The mask to control which fields get updated.
    google.protobuf.FieldMask update_mask = 3;

    // Optional. The resource view to apply to the returned intent.
    IntentView intent_view = 4;
}

// The request message for [Intents.DeleteIntent][google.cloud.dialogflow.v2.Intents.DeleteIntent].
message DeleteIntentRequest {
    // Required. The name of the intent to delete.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string name = 1;
}

// The request message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2.Intents.BatchUpdateIntents].
message BatchUpdateIntentsRequest {
    // Required. The name of the agent to update or create intents in.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string parent = 1;

    // Required. The source of the intent batch.
    oneof intent_batch {
        // The URI to a Google Cloud Storage file containing intents to update or
        // create. The file format can either be a serialized proto (of IntentBatch
        // type) or JSON object. Note: The URI must start with "gs://".
        string intent_batch_uri = 2;

        // The collection of intents to update or create.
        IntentBatch intent_batch_inline = 3;
    }

    // Optional. The language of training phrases, parameters and rich messages
    // defined in `intents`. If not specified, the agent's default language is
    // used. [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 4;

    // Optional. The mask to control which fields get updated.
    google.protobuf.FieldMask update_mask = 5;

    // Optional. The resource view to apply to the returned intent.
    IntentView intent_view = 6;
}

// The response message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2.Intents.BatchUpdateIntents].
message BatchUpdateIntentsResponse {
    // The collection of updated or created intents.
    repeated Intent intents = 1;
}

// The request message for [Intents.BatchDeleteIntents][google.cloud.dialogflow.v2.Intents.BatchDeleteIntents].
message BatchDeleteIntentsRequest {
    // Required. The name of the agent to delete all entities types for. Format:
    // `projects/&lt;project_uuid&gt;/agent`.
    string parent = 1;

    // Required. The collection of intents to delete. Only intent `name` must be
    // filled in.
    repeated Intent intents = 2;
}

// This message is a wrapper around a collection of intents.
message IntentBatch {
    // A collection of intents.
    repeated Intent intents = 1;
}

// Represents the options for views of an intent.
// An intent can be a sizable object. Therefore, we provide a resource view that
// does not return training phrases in the response by default.
enum IntentView {
    // Same as INTENT_VIEW_FULL
    INTENT_VIEW_UNSPECIFIED = 0;

    // All fields are populated.
    INTENT_VIEW_FULL = 1;

    // The only nested structures populated are Contexts and Training phrases.
    // The Training phrases field is populated with only a few entries and no annotations.
    INTENT_VIEW_PARTIAL = 2;

    // All nested structures are not populated (no training phrases, nor contexts, nor parameters, ...)
    INTENT_VIEW_SHALLOW = 3;

    // Minimum view including only intent UUID and intent display name
    INTENT_VIEW_MINIMUM = 4;
}

// Represents the type of intents to filter by in the "List Intents" request
enum IntentCategory {
    // represent all intents
    ALL_INTENTS = 0;
    // represent the default intents
    DEFAULT_INTENTS = 1;
    // represent the user defined (custom) intents
    USER_DEFINED_INTENTS = 2;
    // represents the intents that had its end_date elapsed
    DATE_EXPIRED_INTENTS = 3;
    // represents the intents that its start_date began but had not yet expired
    DATE_ACTIVE_INTENTS = 4;
    // represent the intents that are still expecting its start_date to begin
    DATE_UPCOMING_INTENTS = 5;

}

// This message contains sorting of an intent
message IntentSorting {
    // Structure of intent sorting field
    enum IntentSortingField {
        NO_INTENT_SORTING = 0;
        SORT_INTENT_BY_NAME = 1;
        SORT_INTENT_BY_CREATION_DATE = 2;
        SORT_INTENT_BY_LAST_UPDATED = 3;
        SORT_INTENT_BY_USERSAYS_COUNT = 4;
        SORT_INTENT_BY_START_DATE = 5;
        SORT_INTENT_BY_END_DATE = 6;
    }

    IntentSortingField sorting_field = 1;
    SortingMode sorting_mode = 2;
}

// This message is a request to get an intent tag
message IntentTagRequest {
    // The path of the intent.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string intent_name = 1;
    // Intent tags for this intent to operate on
    repeated string tags = 2;
}

// This message is a request to get intent tags
message GetIntentTagsRequest {
    // The path of the intent.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string intent_name = 1;
}

// This message is a response of getting intent tags
message GetIntentTagsResponse {
    // All the distinct intent tags sorted
    repeated string intent_tags = 1;
}

// This message is a request to get all intent tags
message GetAllIntentTagsRequest {
    // Required. The name of the agent to delete all entities types for. Format:
    // `projects/&lt;project_uuid&gt;/agent`.
    string parent = 1;
}

// This message is a request to update a batch of training phrases
message BatchUpdateTrainingPhrasesRequest {
    // A list of training phrases
    repeated Intent.TrainingPhrase training_phrases = 1;
}

// This message containing the training phrases status
message TrainingPhraseStatus {
    oneof phrase_or_status {
        Intent.TrainingPhrase training_phrase = 1;
        string error_message = 2;
    }
}

// This message is a response of the status of a batch of training phrases
message BatchTrainingPhrasesStatusResponse {
    // A list of training phrase statuses
    repeated TrainingPhraseStatus training_phrase_statuses = 1;
    // indicates if statuses of some of the training phrases have errors
    bool has_errors = 2;
}

// This message is a request of a creation of a batch of training phrases
message BatchCreateTrainingPhrasesRequest {

    message CreateTrainingPhraseRequest {
        // Required. The name of the intent for which to create a training phrase for.
        string intent_name = 1;

        // Required. The training phrase to create.
        Intent.TrainingPhrase training_phrase = 2;
    };
    repeated CreateTrainingPhraseRequest training_phrase_requests = 1;
}

// This message is a request to get a batch training phrases
message BatchGetTrainingPhrasesRequest {
    // Required. The names of the training phrases.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/trainingPhrases/&lt;training_phrase_uuid&gt;</code></pre>
    repeated string names = 1;
}

// This message is a request to delete a batch of training phrases
message BatchDeleteTrainingPhrasesRequest {
    // Required. The names of the training phrases.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/trainingPhrases/&lt;training_phrase_uuid&gt;</code></pre>
    repeated string names = 1;
}

// This message is a response of deleting a batch of training phrases
message BatchDeleteTrainingPhrasesResponse {
    message DeleteTrainingPhraseStatus{
        oneof delete_status{
            google.protobuf.Empty successfully_deleted = 1;
            string error_message = 2;
        }
    }
    repeated DeleteTrainingPhraseStatus delete_statuses = 1;
    bool has_errors = 2;
}


// The request message for TrainingPhraseRequest
message ListTrainingPhrasesRequest {
    // Required. The agent to list all intents from.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string intent_name = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    string language_code = 2;

    // Optional: The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 3;
}

// The response message for ListTrainingPhrase
message ListTrainingPhrasesResponse {
    // The list of training phrases. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated Intent.TrainingPhrase training_phrases = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    // Format: `current_index-<CURRENT_INDEX>--page_size-<PAGE_SIZE>--sub_field-<SUB_FIELD>`
    // where <CURRENT_INDEX> and <PAGE_SIZE> are of type int, <SUB_FIELD> is of type str (example: `training_phrases`)
    string next_page_token = 2;
}

// This message is a response of a batch responses of message status
message BatchResponseMessagesStatusResponse {
    message ResponseMessageStatus {
        oneof phrase_or_status {
            Intent.Message response_message = 1;
            string error_message = 2;
        }
    }
    repeated ResponseMessageStatus response_message_statuses = 1;
    // indicates if statuses of some of the response messages have errors
    bool has_errors = 2;
}

// Request to create a list of new response messages and adds it to an intent
message BatchCreateResponseMessagesRequest {

    message CreateResponseMessageRequest {
        // Required. The name of the intent for which to create a response message for.
        string intent_name = 1;

        // Required. The response message.
        Intent.Message response_message = 2;
    };
    repeated CreateResponseMessageRequest response_message_requests = 1;
}

// Request to update a response message in the specified intent
message BatchUpdateResponseMessagesRequest {
    // The response messages to update
    repeated Intent.Message response_messages = 1;
}

// Request to retrieve a response messages
message BatchGetResponseMessagesRequest {
    // Required. The names of the response messages.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/responseMessages/&lt;message_uuid&gt;</code></pre>
    repeated string names = 1;
}

// Request to delete response messages specified by their names
message BatchDeleteResponseMessagesRequest {
    // Required. The names of the  response messages.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/responseMessages/&lt;message_uuid&gt;</code></pre>
    repeated string names = 1;
}

// Response containing list with deleted response messages
message BatchDeleteResponseMessagesResponse {
    message DeleteResponseMessageStatus{
        oneof delete_status{
            google.protobuf.Empty successfully_deleted = 1;
            string error_message = 2;
        }
    }
    repeated DeleteResponseMessageStatus delete_statuses = 1;
    bool has_errors = 2;
}


// The request message for ResponseMessageRequest
message ListResponseMessagesRequest {
    // Required. The agent to list all intents from.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string intent_name = 1;

    // Optional. The language to list response messages, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    string language_code = 2;

    // Optional: The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 3;
}


// The response message for ListResponseMessage
message ListResponseMessagesResponse {
    // The list of response messages. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated Intent.Message response_messages = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    // Format: `current_index-<CURRENT_INDEX>--page_size-<PAGE_SIZE>--sub_field-<SUB_FIELD>`
    // where <CURRENT_INDEX> and <PAGE_SIZE> are of type int, <SUB_FIELD> is of type str (example: `messages`)
    string next_page_token = 2;
}

// Response containing a batch of parameters in the specified intent
message BatchParametersStatusResponse {
    message ParameterStatus {
        oneof phrase_or_status {
            Intent.Parameter parameter = 1;
            string error_message = 2;
        }
    }
    repeated ParameterStatus parameter_statuses = 1;
    // indicates if statuses of some of the parameters have errors
    bool has_errors = 2;
}

// Request to create a batch of parameters in the specified intent
message BatchCreateParametersRequest {

    message CreateParameterRequest {
        // Required. The name of the intent for which to create a training phrase for.
        string intent_name = 1;

        // Required. The response message.
        Intent.Parameter parameter = 2;
    };
    repeated CreateParameterRequest parameter_requests = 1;
}

// Request to update parameters and adds them to an intent
message BatchUpdateParametersRequest {
    // The response messages to update
    repeated Intent.Parameter parameters = 1;
}

// Request to get batch of parameters in a specified intent
message BatchGetParametersRequest {
    // Required. The names of the response messages.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/parameters/&lt;parameter_uuid</code></pre>
    repeated string names = 1;
}

// Request to delete parameters specified by their names.
message BatchDeleteParametersRequest {
    // Required. The names of the  response messages.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;/parameters/&lt;parameter_uuid</code></pre>
    repeated string names = 1;
}

// This message contains response of deleted parameters
message BatchDeleteParametersResponse {
    message DeleteParameterStatus{
        oneof delete_status{
            google.protobuf.Empty successfully_deleted = 1;
            string error_message = 2;
        }
    }
    repeated DeleteParameterStatus delete_statuses = 1;
    bool has_errors = 2;
}


// The request message for TrainingPhraseRequest
message ListParametersRequest {
    // Required. The agent to list all intents from.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;</code></pre>
    string intent_name = 1;

    // Optional. The language code used to filter out prompts.
    string language_code = 2;

    // Optional: The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 3;
}

// The response message for ListTrainingPhrase
message ListParametersResponse {
    // The list of parameters. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated Intent.Parameter parameters = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    // Format: `current_index-<CURRENT_INDEX>--page_size-<PAGE_SIZE>--sub_field-<SUB_FIELD>`
    // where <CURRENT_INDEX> and <PAGE_SIZE> are of type int, <SUB_FIELD> is of type str (example: `parameters`)
    string next_page_token = 2;
}

// The request message for TrainingPhraseRequest
message ListTrainingPhrasesofIntentsWithEnrichmentRequest {
    // Required. The name of the agent to delete all entities types for. Format:
    // `projects/&lt;project_uuid&gt;/agent`.
    string parent = 1;

    // Optional. The language code used to filter out prompts.
    string language_code = 2;

    // Optional. List of intent uuids to filter by. Only training phrases
    // that have this intent uuid will be returned
    // If not passed, returns all
    repeated string intent_ids = 3;

    // Optional: The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 4;
}

// This message contains a list of training phrases filtered by intent ids, language code and parent passed through the request
message ListTrainingPhrasesofIntentsWithEnrichmentResponse {
    // List of user_says values. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated string training_phrases = 1;

    // Optional. The next_page_token value returned from a previous list request.
    // Format: `current_index-<CURRENT_INDEX>--page_size-<PAGE_SIZE>--sub_field-<SUB_FIELD>`
    // where <CURRENT_INDEX> and <PAGE_SIZE> are of type int, <SUB_FIELD> is of type str (example: `parameters`)
    string next_page_token = 2;
}
