// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Modifications Copyright 2020-2023 ONDEWO GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ondewo.nlu;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "ondewo/nlu/common.proto";
import "ondewo/nlu/operations.proto";

option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.Dialogflow.V2";
option go_package = "google.golang.org/genproto/googleapis/cloud/dialogflow/v2;dialogflow";
option java_multiple_files = true;
option java_outer_classname = "EntityTypeProto";
option java_package = "com.google.cloud.dialogflow.v2";
option objc_class_prefix = "DF";

// Entities are extracted from user input and represent parameters that are
// meaningful to your application. For example, a date range, a proper name
// such as a geographic location or landmark, and so on. Entities represent
// actionable data for your application.
//
// When you define an entity, you can also include synonyms that all map to
// that entity. For example, "soft drink", "soda", "pop", and so on.
//
// There are three types of entities:
//
// *   **System** - entities that are defined by the Dialogflow API for common
//     data types such as date, time, currency, and so on. A system entity is
//     represented by the `EntityType` type.
//
// *   **Developer** - entities that are defined by you that represent
//     actionable data that is meaningful to your application. For example,
//     you could define a `pizza.sauce` entity for red or white pizza sauce,
//     a `pizza.cheese` entity for the different types of cheese on a pizza,
//     a `pizza.topping` entity for different toppings, and so on. A developer
//     entity is represented by the `EntityType` type.
//
// *   **User** - entities that are built for an individual user such as
//     favorites, preferences, playlists, and so on. A user entity is
//     represented by the [SessionEntityType][google.cloud.dialogflow.v2.SessionEntityType] type.
//
// For more information about entity types, see the
// [Dialogflow documentation](https://dialogflow.com/docs/entities).
service EntityTypes {
    // Returns the list of all entity types in the specified agent.
    rpc ListEntityTypes (ListEntityTypesRequest) returns (ListEntityTypesResponse) {
        option (google.api.http) = {
            get: "/v2/{parent=projects/*/agent}/entityTypes"
        };
    }

    // Retrieves the specified entity type.
    rpc GetEntityType (GetEntityTypeRequest) returns (EntityType) {
        option (google.api.http) = {
            get: "/v2/{name=projects/*/agent/entityTypes/*}"
        };
    }

    // Creates an entity type in the specified agent.
    rpc CreateEntityType (CreateEntityTypeRequest) returns (EntityType) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/entityTypes"
            body: "*"
        };
    }

    // Updates the specified entity type.
    rpc UpdateEntityType (UpdateEntityTypeRequest) returns (EntityType) {
        option (google.api.http) = {
            patch: "/v2/{entity_type.name=projects/*/agent/entityTypes/*}"
            body: "*"
        };
    }

    // Deletes the specified entity type.
    rpc DeleteEntityType (DeleteEntityTypeRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v2/{name=projects/*/agent/entityTypes/*}"
        };
    }

    // Updates/Creates multiple entity types in the specified agent.
    //
    // Operation <response: [BatchUpdateEntityTypesResponse][google.cloud.dialogflow.v2.BatchUpdateEntityTypesResponse],
    //            metadata: [google.protobuf.Struct][google.protobuf.Struct]>
    rpc BatchUpdateEntityTypes (BatchUpdateEntityTypesRequest) returns (ondewo.nlu.Operation) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/entityTypes:batchUpdate"
            body: "*"
        };
    }

    // Deletes entity types in the specified agent.
    //
    // Operation <response: [google.protobuf.Empty][google.protobuf.Empty],
    //            metadata: [google.protobuf.Struct][google.protobuf.Struct]>
    rpc BatchDeleteEntityTypes (BatchDeleteEntityTypesRequest) returns (ondewo.nlu.Operation) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/entityTypes:batchDelete"
            body: "*"
        };
    }
    // Retrieves the specified entity .
    rpc GetEntity (GetEntityRequest) returns (EntityType.Entity) {
        option (google.api.http) = {
            get: "/v2/{name=projects/*/agent/entityTypes/*/entities/*}"
        };
    }

    // Creates an entity  in the specified agent.
    rpc CreateEntity (CreateEntityRequest) returns (EntityType.Entity) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/entityTypes/*/entities/"
            body: "*"
        };
    }

    // Updates the specified entity .
    rpc UpdateEntity (UpdateEntityRequest) returns (EntityType.Entity) {
        option (google.api.http) = {
            patch: "/v2/{entity_.name=projects/*/agent/entityTypes/*/entities/*}"
            body: "*"
        };
    }

    // Deletes the specified entity .
    rpc DeleteEntity (DeleteEntityRequest) returns (DeleteEntityStatus) {
        option (google.api.http) = {
            delete: "/v2/{name=projects/*/agent/entityTypes/*/entities/*}"
        };
    }

    // Creates an entity value in an entity type.
    rpc BatchCreateEntities (BatchCreateEntitiesRequest) returns (BatchEntitiesResponse);

    // Updates a specific entity value.
    rpc BatchUpdateEntities (BatchUpdateEntitiesRequest) returns (BatchEntitiesResponse);

    // Gets a specific entity value.
    rpc BatchGetEntities (BatchGetEntitiesRequest) returns (BatchEntitiesResponse);

    // Deletes the specified entity value.
    rpc BatchDeleteEntities (BatchDeleteEntitiesRequest) returns (BatchDeleteEntitiesResponse);

    // List entities of an entity type
    rpc ListEntities(ListEntitiesRequest) returns (ListEntitiesResponse);
}

// Represents an entity type.
// Entity types serve as a tool for extracting parameter values from natural
// language queries.
message EntityType {
    // Optional. Represents an entity.
    message Entity {
        // Required.
        // For `KIND_MAP` entity types:
        //   A canonical name to be used in place of synonyms.
        // For `KIND_LIST` entity types:
        //   A string that can contain references to other entity types (with or
        //   without aliases).
        string value = 1;

        // Required. A collection of synonyms. For `KIND_LIST` entity types this
        // must contain exactly one synonym equal to `value`.
        repeated string synonyms = 2;

        // The unique identifier of the entity. Format:
        // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>/entities/<Entity ID>`.
        string name = 3;

        // The name of the entity.
        string display_name = 4;

        // Optional. Total count of entity synonyms
        int32 synonym_count = 5;

        // Required. The language to list entity synonyms for.
        string language_code = 6;

        // Creation date and time. Read-only field.
        google.protobuf.Timestamp created_at = 7;

        // Modification date and time. Read-only field.
        google.protobuf.Timestamp modified_at = 8;

        // User id in form of a valid UUID.
        string created_by = 9;

        // User id in form of a valid UUID.
        string modified_by = 10;
    }

    // Represents kinds of entities.
    enum Kind {
        // Not specified. This value should be never used.
        KIND_UNSPECIFIED = 0;

        // Map entity types allow mapping of a group of synonyms to a canonical
        // value.
        KIND_MAP = 1;

        // List entity types contain a set of entries that do not map to canonical
        // values. However, list entity types can contain references to other entity
        // types (with or without aliases).
        KIND_LIST = 2;
    }

    enum EntityTypeStatus {
        ACTIVE = 0;
        INACTIVE = 1;
    }

    // Represents different entity type expansion modes. Automated expansion
    // allows an agent to recognize values that have not been explicitly listed in
    // the entity (for example, new kinds of shopping list items).
    enum AutoExpansionMode {
        // Auto expansion disabled for the entity.
        AUTO_EXPANSION_MODE_UNSPECIFIED = 0;

        // Allows an agent to recognize values that have not been explicitly
        // listed in the entity.
        AUTO_EXPANSION_MODE_DEFAULT = 1;
    }

    // Required for all methods except `create` (`create` populates the name
    // automatically.
    // The unique identifier of the entity type. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>`.
    string name = 1;

    // Required. The name of the entity type.
    string display_name = 2;

    // Required. Indicates the kind of entity type.
    Kind kind = 3;

    // Optional. Indicates whether the entity type can be automatically
    // expanded.
    AutoExpansionMode auto_expansion_mode = 4;

    // Optional. The collection of entities associated with the entity type.
    repeated Entity entities = 6;

    string next_page_token = 10;

    // Read-Only field. Total count of entity values of the entity type
    int32 entity_count = 11;

    // Indicates whether the entity type is active or not
    EntityTypeStatus status = 12;

    // Read-Only field. Total count of entity synonyms of the entity type
    int32 synonym_count = 13;

    // Creation date and time. Read-only field.
    google.protobuf.Timestamp created_at = 14;

    // Modification date and time. Read-only field.
    google.protobuf.Timestamp modified_at = 15;

    // User id in form of a valid UUID.
    string created_by = 16;

    // User id in form of a valid UUID.
    string modified_by = 17;
}

// The request message for [EntityTypes.ListEntityTypes][google.cloud.dialogflow.v2.EntityTypes.ListEntityTypes].
message ListEntityTypesRequest {
    // Required. The agent to list all entity types from.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string parent = 1;

    // Optional. The language to list entity synonyms for. If not specified,
    // the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 2;

    // Optional. The next_page_token value returned from a previous list request.
    // The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 4;

    // Optional. The resource view to apply to the returned entity type.
    EntityTypeView entity_type_view = 5;

    // Optional. Applies a filter to the list. Default, no filter.
    EntityTypeCategory filter_by_category = 6;

    // Optional. Defines the sorting of the list. Default, no sorting.
    EntityTypeSorting sort_by_field = 7;
}

// The response message for [EntityTypes.ListEntityTypes][google.cloud.dialogflow.v2.EntityTypes.ListEntityTypes].
message ListEntityTypesResponse {
    // The list of agent entity types. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated EntityType entity_types = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    string next_page_token = 2;
}

// The request message for [EntityTypes.GetEntityType][google.cloud.dialogflow.v2.EntityTypes.GetEntityType].
message GetEntityTypeRequest {
    // Required. The name of the entity type.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;</code></pre>
    string name = 1;

    // Optional. The language to retrieve entity synonyms for. If not specified,
    // the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 2;

    // The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 5;

    // Optional. The resource view to apply to the returned Entity Type
    EntityTypeView entity_type_view = 6;
}

// The request message for [EntityTypes.CreateEntityType][google.cloud.dialogflow.v2.EntityTypes.CreateEntityType].
message CreateEntityTypeRequest {
    // Required. The agent to create a entity type for.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string parent = 1;

    // Required. The entity type to create.
    EntityType entity_type = 2;

    // Optional. The language of entity synonyms defined in `entity_type`. If not
    // specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 3;

    // Optional. The resource view to apply to the returned Entity Type
    EntityTypeView entity_type_view = 6;
}

// The request message for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType].
message UpdateEntityTypeRequest {
    // Required. The entity type to update.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;</code></pre>
    EntityType entity_type = 1;

    // Optional. The language of entity synonyms defined in `entity_type`. If not
    // specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 2;

    // Optional. The mask to control which fields get updated.
    google.protobuf.FieldMask update_mask = 3;

    // Optional. The resource view to apply to the returned Entity Type
    EntityTypeView entity_type_view = 6;
}

// The request message for [EntityTypes.DeleteEntityType][google.cloud.dialogflow.v2.EntityTypes.DeleteEntityType].
message DeleteEntityTypeRequest {
    // Required. The name of the entity type to delete.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;</code></pre>
    string name = 1;
}

// The request message for [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes].
message BatchUpdateEntityTypesRequest {
    // Required. The name of the agent to update or create entity types in.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string parent = 1;

    // Required. The source of the entity type batch.
    //
    // For each entity type in the batch:
    // * If `name` is specified, we update an existing entity type.
    // * If `name` is not specified, we create a new entity type.
    oneof entity_type_batch {
        // The URI to a Google Cloud Storage file containing entity types to update
        // or create. The file format can either be a serialized proto (of
        // EntityBatch type) or a JSON object. Note: The URI must start with
        // "gs://".
        string entity_type_batch_uri = 2;

        // The collection of entity type to update or create.
        EntityTypeBatch entity_type_batch_inline = 3;
    }

    // Optional. The language of entity synonyms defined in `entity_types`. If not
    // specified, the agent's default language is used.
    // [More than a dozen
    // languages](https://dialogflow.com/docs/reference/language) are supported.
    // Note: languages must be enabled in the agent, before they can be used.
    string language_code = 4;

    // Optional. The mask to control which fields get updated.
    google.protobuf.FieldMask update_mask = 5;
}

// The response message for [EntityTypes.BatchUpdateEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes].
message BatchUpdateEntityTypesResponse {
    // The collection of updated or created entity types.
    repeated EntityType entity_types = 1;
}

// The request message for [EntityTypes.BatchDeleteEntityTypes][google.cloud.dialogflow.v2.EntityTypes.BatchDeleteEntityTypes].
message BatchDeleteEntityTypesRequest {
    // Required. The name of the agent to delete all entities types for. Format:
    // `projects/<Project ID>/agent`.
    string parent = 1;

    // Required. The names entity types to delete. All names must point to the
    // same agent as `parent`.
    repeated string entity_type_names = 2;
}


// This message is a wrapper around a collection of entity types.
message EntityTypeBatch {
    // A collection of entity types.
    repeated EntityType entity_types = 1;
}

// Represents the options for views of an entity type.
// An entity type can be a sizable object. Therefore, we provide a resource view that
// does not return all values and synonyms besides the full view that is set by default.
enum EntityTypeView {
    // Same as ENTITY_TYPE_VIEW_FULL
    ENTITY_TYPE_VIEW_UNSPECIFIED = 0;

    // All fields are populated.
    ENTITY_TYPE_VIEW_FULL = 1;

    // The amount of entity values and synonyms is limited
    ENTITY_TYPE_VIEW_PARTIAL = 2;

    // No entity synonyms are returned, only entity values
    ENTITY_TYPE_VIEW_SHALLOW = 3;

    // Minimum view including only entity type UUID and entity type display name
    ENTITY_TYPE_VIEW_MINIMUM = 4;
}

// Represents the category of entity types to filter by in the "List Entity Types" request
enum EntityTypeCategory {
    // represent all entity types
    ALL_ENTITY_TYPES = 0;
    // represent the default entity types
    DEFAULT_ENTITY_TYPES = 1;
    // represent the user defined (custom) entity types
    USER_DEFINED_ENTITY_TYPES = 2;

}

// This message contains Entity type sorting
message EntityTypeSorting {
    // Structure of Entity type sorting field
    enum EntityTypeSortingField {
        NO_ENTITY_TYPE_SORTING = 0;
        SORT_ENTITY_TYPE_BY_NAME = 1;
        SORT_ENTITY_TYPE_BY_CREATION_DATE = 2;
        SORT_ENTITY_TYPE_BY_LAST_UPDATED = 3;
        SORT_ENTITY_TYPE_BY_ENTITY_VALUE_COUNT = 4;
        SORT_ENTITY_TYPE_BY_SYNONYM_COUNT = 5;
    }

    EntityTypeSortingField sorting_field = 1;
    SortingMode sorting_mode = 2;
}

// This message is for the entity status
message EntityStatus {
    oneof entity_or_status {
        // The entity
        EntityType.Entity entity = 1;
        // Error message
        string error_message = 2;
    }
}

// This message is a response of batch entities
message BatchEntitiesResponse {

    // A list of entity statuses
    repeated EntityStatus entity_statuses = 1;
    // indicates if statuses of some of the training phrases have errors
    bool has_errors = 2;
}

message CreateEntityRequest {
    // Required. Name of the entity type in which to create the entity value. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>/entities/<Entity ID>`.
    string entity_type_name = 1;

    // The entity value to create
    EntityType.Entity entity = 2;
}

// This message is a request to create a batch entities
message BatchCreateEntitiesRequest {
    // The create entity requests in a batch
    repeated CreateEntityRequest create_entity_requests = 1;
}

// This message is a request to update a batch of entities
message BatchUpdateEntitiesRequest {
    // The entities to update
    repeated EntityType.Entity entities = 1;
}

// This message is a request to update an entity
message UpdateEntityRequest {
    // The entity to update
    EntityType.Entity entity = 1;
}

// This message is a request to get a an entity
message GetEntityRequest {
    // The unique identifiers of the entities. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>/entities/<Entity ID>`.
    string name = 1;
}

// This message is a request to get a batch of entities
message BatchGetEntitiesRequest {
    // The unique identifiers of the entities. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>/entities/<Entity ID>`.
    repeated string names = 1;
}

// This message is a request to delete a batch of entities
message BatchDeleteEntitiesRequest {
    // The unique identifiers of the entities. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>/entities/<Entity ID>`.
    repeated string names = 1;
}

// This message is a request to delete a batch of entities
message DeleteEntityRequest {
    // The unique identifiers of the entities. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>/entities/<Entity ID>`.
    string name = 1;
}

// This message contains the status of an entity deletion
message DeleteEntityStatus {

    // error if any
    oneof delete_status{
        google.protobuf.Empty successfully_deleted = 1;
        string error_message = 2;
    }
}

// This message is a response of deletion of a batch of entities
message BatchDeleteEntitiesResponse {
    // status of an entity deletion
    repeated DeleteEntityStatus delete_statuses = 1;
    // error messages
    bool has_errors = 2;
}

// This message is a request to get a list of entities
message ListEntitiesRequest {
    // The unique identifier of the entity type. Format:
    // `projects/<Project ID>/agent/entityTypes/<Entity Type ID>
    string entity_type_name = 1;

    // Optional. The language to list training phrases, parameters and rich
    // messages for. If not specified, the agent's default language is used.
    string language_code = 2;

    // Optional. The next_page_token value returned from a previous list request.
    // The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 3;

    // Optional. Defines the sorting of the list. Default, no sorting.
    EntityValueSorting sort_by_field = 5;

    // Optional. Defines a pattern to search for in the entity type "values" and "synonyms"
    // Example:
    //      Pattern: "dark"
    //      Results:
    //              [Entity Value]          [Entity Synonyms]
    //              Red                     red, scarlett, dark red, ...
    //              Blue                    blue, indico, dark blue, sky blue, ...
    //              Dark                    obscure, black, opaque, ...
    //
    string search_by_pattern = 6;
}

// This message is a response of listing entities
message ListEntitiesResponse {
    // The list of entities
    repeated EntityType.Entity entities = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    string next_page_token = 2;
}

// This message contains entity value sorting
message EntityValueSorting {
    // Structure of Entity value sorting field
    enum EntityValueSortingField {
        NO_ENTITY_VALUE_SORTING = 0;  // Default behaviour: Sorts by value
        SORT_ENTITY_VALUE_BY_DISPLAY_NAME = 1;
        SORT_ENTITY_VALUE_BY_VALUE = 2;
        SORT_ENTITY_VALUE_BY_SYNONYM_COUNT = 3;
    }

    EntityValueSortingField sorting_field = 7;
    SortingMode sorting_mode = 8;
}
