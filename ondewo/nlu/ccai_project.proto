// Copyright 2020-2023 ONDEWO GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ondewo.nlu;

import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

import "ondewo/nlu/common.proto";

// Service to manage Call Center AI (CCAI service) Projects.
service CcaiProjects {

    // Retrieves information about a specific CCAI service project.
    rpc GetCcaiProject (GetCcaiProjectRequest) returns (CcaiProject);

    // Creates a new CCAI service project based on the provided request.
    rpc CreateCcaiProject (CreateCcaiProjectRequest) returns (CreateCcaiProjectResponse);

    // Deletes a CCAI service project identified by the provided request.
    rpc DeleteCcaiProject (DeleteCcaiProjectRequest) returns (DeleteCcaiProjectResponse);

    // Lists all CCAI service projects based on the provided request.
    rpc ListCcaiProjects (ListCcaiProjectsRequest) returns (ListCcaiProjectsResponse);

    // Updates the information of an existing CCAI service project.
    rpc UpdateCcaiProject (UpdateCcaiProjectRequest) returns (UpdateCcaiProjectResponse);

    // Retrieves information about a specific CCAI service.
    rpc GetCcaiService (GetCcaiServiceRequest) returns (CcaiService);

}


// Message representing a CCAI service project
message CcaiProject {

    // Resource name of the CCAI service project
    string name = 1;

    // Required. The display name of this ccai project.
    string display_name = 2;

    // Optional. Resource name of the user who is the owner of the project.
    string owner_name = 3;

    // Map of two letter language codes to lists of CcaiServiceList
    // Two-letter language codes following ISO 639-1 (see https://en.wikipedia.org/wiki/ISO_639-1)
    map<string, CcaiServiceList> ccai_services_map = 4;

    // The status of the ccai project.
    CcaiProjectStatus ccai_project_status = 5;

    // Creation date and time. Read-only field.
    google.protobuf.Timestamp created_at = 6;

    // Modification date and time. Read-only field.
    google.protobuf.Timestamp modified_at = 7;

    // User id in the form of a valid UUID.
    string created_by = 8;

    // User id in the form of a valid UUID.
    string modified_by = 9;

    // Required. Associated NLU agent
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 10;
}


// Status of a Call Center AI (CCAI service) Project.
enum CcaiProjectStatus {

    // No status specified
    CCAI_PROJECT_STATUS_UNSPECIFIED = 0;

    // Project successfully created and undeployed
    CCAI_PROJECT_STATUS_UNDEPLOYED = 1;

    // Project configuration is updating
    CCAI_PROJECT_STATUS_UPDATING = 2;

    // Project is deploying
    CCAI_PROJECT_STATUS_DEPLOYING = 3;

    // Project is deployed
    CCAI_PROJECT_STATUS_DEPLOYED = 4;

    // Project is un-deploying
    CCAI_PROJECT_STATUS_UNDEPLOYING = 5;

    // Project is currently deleting
    CCAI_PROJECT_STATUS_DELETING = 6;

    // Project is deleted
    CCAI_PROJECT_STATUS_DELETED = 7;

}

// Message representing a list of CCAI service services
message CcaiServiceList {

    // CCAI service services
    repeated CcaiService ccai_services = 1;
}

enum CcaiServiceType {

    // unspecified
    CCAI_SERVICE_TYPE_UNSPECIFIED = 0;

    // ondewo-aim service
    CCAI_SERVICE_TYPE_ONDEWO_AIM = 1;

    // ondewo-bpi service
    CCAI_SERVICE_TYPE_ONDEWO_BPI = 2;

    // ondewo-csi service
    CCAI_SERVICE_TYPE_ONDEWO_CSI = 3;

    // ondewo-nlu service
    CCAI_SERVICE_TYPE_ONDEWO_NLU = 4;

    // ondewo-s2t service
    CCAI_SERVICE_TYPE_ONDEWO_S2T = 5;

    // ondewo-sip service
    CCAI_SERVICE_TYPE_ONDEWO_SIP = 6;

    // ondewo-t2s service
    CCAI_SERVICE_TYPE_ONDEWO_T2S = 7;

    // ondewo-vtsi service
    CCAI_SERVICE_TYPE_ONDEWO_VTSI = 8;

    // ondewo-vtsi service
    CCAI_SERVICE_TYPE_ONDEWO_VTSI_RABBITMQ = 9;

    // ondewo-nlu-qa service
    CCAI_SERVICE_TYPE_ONDEWO_NLU_QA = 10;

    // ondewo-nlu-webhook service
    CCAI_SERVICE_TYPE_ONDEWO_NLU_WEBHOOK = 11;

    // ondewo-survey service
    CCAI_SERVICE_TYPE_ONDEWO_SURVEY = 12;

    // ondewo-nlu-llm service
    CCAI_SERVICE_TYPE_ONDEWO_NLU_LLM = 13;

    // ondewo-nlu-websearch service
    CCAI_SERVICE_TYPE_ONDEWO_NLU_WEBSEARCH = 14;

    // ondewo-aim-webchat service
    CCAI_SERVICE_TYPE_ONDEWO_AIM_WEBCHAT = 15;

    // ondewo-aim-webphone service
    CCAI_SERVICE_TYPE_ONDEWO_AIM_WEBPHONE = 16;

    // ondewo-nlu-vectorstore service
    CCAI_SERVICE_TYPE_ONDEWO_NLU_VECTORSTORE = 17;

}
// Definition of a Call Center AI (CCAI service) Service.
message CcaiService {

    // Resource name of the service. Must be unique.
    string name = 1;

    // Display name for better identification.
    string display_name = 2;

    // Language code representing the service language
    // Format (e.g., "en" for English, "de" for German).
    string language_code = 3;

    // gRPC host for communication with the specified port.
    string grpc_host = 4;

    // Port for gRPC communication.
    int32 grpc_port = 5;

    // Web gRPC host for web-based communication with the specified port.
    string webgrpc_host = 6;

    // Port for web gRPC communication.
    int32 webgrpc_port = 7;

    // Path to the gRPC certificate for secure communication.
    string grpc_cert = 8;

    // Additional host for communication, if needed.
    string host = 9;

    // Port for additional communication.
    int32 port = 10;

    // Another additional port for communication if required.
    int32 port2 = 11;

    // Http basic auth token
    string http_basic_auth_token = 12;

    // Account name for authentication.
    string account_name = 13;

    // Password for the specified account for authentication.
    string account_password = 14;

    // API key for accessing the service, if applicable.
    string api_key = 15;

    // Type of CCAI service service (e.g., TEXT_TO_SPEECH, SPEECH_TO_TEXT).
    CcaiServiceType ccai_service_type = 16;

    // Resource name of the ccai_project the ccai_service belongs to
    string ccai_project_name = 17;

    // Detailed configuration of the CcaiService
    google.protobuf.Struct ccai_service_config = 18;

    // Creation date and time of the service. Read-only field.
    google.protobuf.Timestamp created_at = 19;

    // Modification date and time of the service. Read-only field.
    google.protobuf.Timestamp modified_at = 20;

    // User ID of the creator in the form of a valid UUID. Read-only field.
    string created_by = 21;

    // User ID of the last modifier in the form of a valid UUID. Read-only field.
    string modified_by = 22;

    // Optional. The headers of the request message
    optional google.protobuf.Struct headers = 23;

    // Provider of the ccai service
    optional CcaiServiceProvider ccai_service_provider = 24;

    // Index indicating the hierarchical position of a service within the service hierarchy.
    // The index follows a tree-like structure, where each level of depth is separated by a "_".
    // For example:
    // - "1" represents a top-level service
    // - "1_1" represents a sub-service under "1"
    // - "1_1_1" represents a sub-service under "1.1"
    // This structure allows for easy representation and organization of services in nested workflows.
    //
    // If CcaiService have the same service_hierarchy they are executed in parallel.
    // For example:
    // - "1" Service A
    // - "1_1" Service B
    // - "1_1" Service C
    //
    // Service B and C will be executed in parallel and the Service A receives both results of service B and C.
    // The variable for the return value of a service is {{OUTPUT_SERVICE_service_hierarchy}}. So in the example
    // above the outputs of the services are {{OUTPUT_SERVICE_1}}, {{OUTPUT_SERVICE_1_1}}, and {{OUTPUT_SERVICE_1_2}}.
    optional string service_hierarchy = 25;

}

enum CcaiServiceProvider {

    // No specified provider or placeholder
    NO_CCAI_SERVICE_PROVIDER = 0;

    // ONDEWO provider for CCAI service services
    CCAI_SERVICE_PROVIDER_ONDEWO = 1;

    // Google as the CCAI service provider, utilizing Googleâ€™s conversational AI capabilities
    CCAI_SERVICE_PROVIDER_GOOGLE_GEMINI = 2;

    // Microsoft Azure as the CCAI service provider, using Microsoft's Azure cognitive services
    CCAI_SERVICE_PROVIDER_MICROSOFT_AZURE_OPENAI = 3;

    // LangChain as the CCAI service provider
    CCAI_SERVICE_PROVIDER_MICROSOFT_AUTOGEN = 4;

    // Ollama as the CCAI service provider, typically associated with specific OLLAMA AI tools
    CCAI_SERVICE_PROVIDER_OLLAMA = 5;

    // OpenAI as the CCAI service provider, commonly used for models such as GPT
    CCAI_SERVICE_PROVIDER_OPENAI = 6;

    // Anthropic as the CCAI service provider, used with AI models from Anthropic
    CCAI_SERVICE_PROVIDER_ANTHROPIC = 7;

    // Hugging Face as the CCAI service provider, often used for open-source NLP models
    CCAI_SERVICE_PROVIDER_HUGGINGFACE = 8;

    // IBM as the CCAI service provider, such as IBM Watson for conversational AI
    CCAI_SERVICE_PROVIDER_IBM = 9;

    // Haystack as the CCAI service provider, e.g. for question and answering, conversations
    CCAI_SERVICE_PROVIDER_HAYSTACK = 10;

    // LangChain as the CCAI service provider
    CCAI_SERVICE_PROVIDER_LANGCHAIN = 11;

    // Amazon AWS as the CCAI service provider, using Amazon's AI/ML services
    CCAI_SERVICE_PROVIDER_AMAZON = 12;

    // Mistral as the CCAI service provider, using Mistrals services
    CCAI_SERVICE_PROVIDER_MISTRAL = 13;

    // DuckDuckGo Websearch API
    CCAI_SERVICE_PROVIDER_DUCKDUCKGO = 14;

    // Google PSE Websearch API
    CCAI_SERVICE_PROVIDER_GOOGLE_PSE = 15;

    // Jina Websearch API
    CCAI_SERVICE_PROVIDER_JINA = 16;

    // Tavily Websearch API
    CCAI_SERVICE_PROVIDER_TAVILY = 17;

    // Elastic Search vector database service
    CCAI_SERVICE_PROVIDER_ELASTICSEARCH = 18;

    // Milvus vector database service
    CCAI_SERVICE_PROVIDER_MILVUS = 19;

    // Qdrant vector database service
    CCAI_SERVICE_PROVIDER_QDRANT = 20;

    // Chroma vector database service
    CCAI_SERVICE_PROVIDER_CHROMA = 21;

}


// Request to create a Call Center AI (CCAI service) project.
message CreateCcaiProjectRequest {

    // The CCAI service project to be created.
    CcaiProject ccai_project = 1;

    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 4;

}

// Response after attempting to create a Call Center AI (CCAI service) project.
message CreateCcaiProjectResponse {

    // The created CCAI service project.
    CcaiProject ccai_project = 1;

    // Error message if the creation is unsuccessful.
    string error_message = 2;

}


// Request to retrieve a CCAI service project
message GetCcaiProjectRequest{

    // CCAI service project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>
    string name = 1;

    // Optional. Specify the view of the returned CcaiProject (full view by default)
    optional CcaiProjectView ccai_project_view = 2;

    // Filter which services should be included in the returned CcaiProject
    optional CcaiServiceFilter ccai_service_filter = 3;

    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 4;

}

// Request to retrieve a CCAI service project
message GetCcaiServiceRequest{

    // CCAI service project name with which to perform the call of the form
    // <pre><code>projects/&lt;project_uuid&gt;/ccai/services/&lt;service_uuid&gt;</code></pre>
    string name = 1;

    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 4;

}


// Request to get the list of agents
message ListCcaiProjectsRequest {

    // Optional. Specify the view of the returned CcaiProject (full view by default)
    CcaiProjectView ccai_project_view = 1;

    // Filter which services should be included in the CcaiProject
    optional CcaiServiceFilter ccai_service_filter = 2;

    // Optional. Field to define the sorting of the list of CCAI service projects in the response.
    // If not specified, the default behavior is to have no sorting.
    optional CcaiProjectSorting ccai_project_sorting = 3;

    // Optional. The next_page_token value returned from a previous list request.
    // Example: "current_index-1--page_size-20"
    // The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    optional string page_token = 4;


    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 5;

}

// This is a protobuf message definition for the response of getting a list of CCAI service projects.
message ListCcaiProjectsResponse {

    // The list of CCAI service projects returned in the response.
    // Use the 'repeated' keyword to indicate that this field can contain multiple instances of CcaiProject.
    repeated CcaiProject ccai_projects = 1;

    // The next_page_token is used to retrieve the next page of a returned result,
    // e.g. next_page_token is current_index-2
    string next_page_token = 2;

}

// This protobuf message defines the sorting order for CCAI service (Virtual Test System Infrastructure) projects.
message CcaiProjectSorting {

    // Enum to specify the sorting field for CCAI service projects.
    enum CcaiProjectSortingField {

        // No sorting
        NO_CCAI_PROJECT_SORTING = 0;

        // Sort by project name such as <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>.
        SORT_CCAI_PROJECT_BY_NAME = 1;

        // Sort by display name
        SORT_CCAI_PROJECT_BY_DISPLAY_NAME = 2;

        // Sort by creation date
        SORT_CCAI_PROJECT_BY_CREATION_DATE = 3;

        // Sort by last modified date
        SORT_CCAI_PROJECT_BY_LAST_MODIFIED = 4;

    }

    // sorting field for ccai projects sorting
    optional CcaiProjectSortingField sorting_field = 1;

    // Sorting mode
    optional SortingMode sorting_mode = 2;

}


// CcaiProjectView defines what the CcaiProject message contains
enum CcaiProjectView {

    // Unspecified CCAI_PROJECT view: the view is defined by the call:
    CCAI_PROJECT_VIEW_UNSPECIFIED = 0;

    // Full CCAI_PROJECT view: populate all the fields of the CCAI_PROJECT message including configs.
    CCAI_PROJECT_VIEW_FULL = 1;

    // Shallow CCAI_PROJECT view: populates all the fields except configs.
    CCAI_PROJECT_VIEW_SHALLOW = 2;

    // Minimum view including only CCAI_PROJECT UUID and CCAI_PROJECT display name
    CCAI_PROJECT_VIEW_MINIMUM = 3;

}

// Filter which services should be included in the returned CcaiProject
message CcaiServiceFilter {

    // Language codes of the projects for which services are filtered.
    repeated string language_codes = 1;

    // Type of CCAI service service
    repeated CcaiServiceType ccai_service_types = 2;

}

// Request to updated CCAI service project
message UpdateCcaiProjectRequest{

    // The CcaiProject that should be updated
    CcaiProject ccai_project = 1;

    // Filter which services should be updated in the CcaiProject
    optional CcaiServiceFilter ccai_service_filter = 2;

    // Optional. The mask to control which fields get updated.
    // Note: Not implemented yet
    optional google.protobuf.FieldMask update_mask = 3;

    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 4;

}

// Request to updated CCAI service project
message UpdateCcaiProjectResponse{

    // CCAI service project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>
    string name = 1;

    // error message if there are any.
    string error_message = 2;

}

// Request to delete a CCAI service project
// If a deployed CCAI service project was deleted then it was undeployed beforehand automatically
message DeleteCcaiProjectRequest{

    // CCAI service project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>
    string name = 1;

    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 4;

}

// Response to delete a CCAI service project
// If a deployed CCAI service project was deleted then it was undeployed beforehand automatically
message DeleteCcaiProjectResponse{

    // CCAI service project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>
    string name = 1;

    // error message if there are any.
    string error_message = 2;

    // Required. The nlu agent project of this CcaiProject.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agent</code></pre>
    string nlu_project_name = 4;

}
