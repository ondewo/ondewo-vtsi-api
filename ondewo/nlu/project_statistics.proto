// Copyright 2020-2023 ONDEWO GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ondewo.nlu;

import "google/api/annotations.proto";
import "ondewo/nlu/intent.proto";
import "ondewo/nlu/common.proto";
import "ondewo/nlu/entity_type.proto";

// Project Root Statistics
service ProjectStatistics {

    // Returns the intent count within a project
    rpc GetIntentCount (GetIntentCountRequest) returns (StatResponse) {
        option (google.api.http) = {
            get: "/{parent=projects/*/agent}/intents:count"
        };
    }
    // Returns the entity types count within a project
    rpc GetEntityTypeCount (GetEntityTypeCountRequest) returns (StatResponse) {
        option (google.api.http) = {
            get: "/{parent=projects/*/agent}/entityTypes:count"
        };
    }

    // Returns the users count within a project
    rpc GetUserCount (GetProjectStatRequest) returns (StatResponse) {
        option (google.api.http) = {
            get: "/{parent=projects/*/agent}/users:count"
        };
    }

    // Returns the sessions count within a project
    rpc GetSessionCount (GetProjectStatRequest) returns (StatResponse) {
        option (google.api.http) = {
            get: "/{parent=projects/*/agent}/sessions:count"
        };
    }

    // Returns the training phrases count within a project
    rpc GetTrainingPhraseCount (GetProjectElementStatRequest) returns (StatResponse) {
        option (google.api.http) = {
            get: "/{name=projects/*/agent/intents/*}/trainingPhrases:count"
        };
    }

    // Returns the responses count within a project
    rpc GetResponseCount (GetProjectElementStatRequest) returns(StatResponse) {
        option (google.api.http) = {
            get: "/{name=projects/*/agent/intents/*}/responses:count"
        };
    }

    // Returns the entity value count within a project
    rpc GetEntityValueCount (GetProjectElementStatRequest) returns(StatResponse) {
        option (google.api.http) = {
            get: "/{name=projects/*/agent/entityTypes/*}/entities:count"
        };
    }

    // Returns the entity synonyms count within a project
    rpc GetEntitySynonymCount (GetProjectElementStatRequest) returns(StatResponse) {
        option (google.api.http) = {
            get: "/{name=projects/*/agent/entityTypes/*/entityValues/*}/entitySynonyms:count"
        };
    }
}

// Request to get the intent count
message GetIntentCountRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    // Optional. Applies a filter to the list to be counted. Default, no filter.
    IntentCategory filter_by_category = 2;
}

// Request to get entity type count
message GetEntityTypeCountRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    // Optional. Applies a filter to the list to be counted. Default, no filter.
    EntityTypeCategory filter_by_category = 2;
}

// Request to get project statistics
message GetProjectStatRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;
}

// Request to get project element statistics
message GetProjectElementStatRequest {

    // Required. The name/path of the concept to get the statistic from.
    // Example:
    //<pre><code>
    // * projects/&lt;project_uuid&gt;/agent/intents/&lt;intent_uuid&gt;
    // * projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;
    // * projects/&lt;project_uuid&gt;/agent/entityTypes/&lt;entity_type_uuid&gt;/entityValues&lt;entity_value_uuid&gt;
    //</code></pre>
    string name = 1;

    // Language code
    string language_code = 2;
}
