// Copyright 2020-2023 ONDEWO GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ondewo.nlu;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// Project roles
service ProjectRoles {

    // Creates a project role by creating the knowledge base master
    rpc CreateProjectRole (CreateProjectRoleRequest) returns (ProjectRole) {
        option (google.api.http) = {
            post: "/v2/{parent=projects/*/agent}/project_roles"
            body: "*"
        };
    }

    // Creates a project role by getting the knowledge base master
    rpc GetProjectRole (GetProjectRoleRequest) returns (ProjectRole) {
        option (google.api.http) = {
            get: "/v2/{parent=projects/*/agent}/project_roles/{role_id=*}"
        };
    }

    // Deletes project role
    rpc DeleteProjectRole (DeleteProjectRoleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v2/{parent=projects/*/agent}/project_roles/{role_id=*}"
        };
    }

    // Updates project role
    rpc UpdateProjectRole (UpdateProjectRoleRequest) returns (ProjectRole) {
        option (google.api.http) = {
            patch: "/v2/{parent=projects/*/agent}/project_roles"
            body: "*"
        };
    }

    // List project roles
    rpc ListProjectRoles (ListProjectRolesRequest) returns (ListProjectRolesResponse) {
        option (google.api.http) = {
            get: "/v2/{parent=projects/*/agent}/project_roles"
        };
    }
}

// Project Role messages
message ProjectRole {
    // unique identifier of the role
    uint32 role_id = 1;
    // unique name of the role
    string name = 2;
    // defines the permissions for the given role (the strings can be gotten from the ListProjectPermissions)
    repeated string permissions = 3;

    // Creation date and time. Read-only field.
    google.protobuf.Timestamp created_at = 4;

    // Modification date and time. Read-only field.
    google.protobuf.Timestamp modified_at = 5;

    // User id in form of a valid UUID.
    string created_by = 6;

    // User id in form of a valid UUID.
    string modified_by = 7;

}

// Structure of project role
enum DefaultProjectRole {

    // These roles have permissions valid only on a specific project unspecified, default value depends on endpoint
    PROJECT_UNSPECIFIED = 0;

    // read-only access
    PROJECT_USER = 1;

    // permissions of PROJECT_USER + execution rights (detect intent, extract entities, train, etc)
    PROJECT_EXECUTOR = 2;

    // permissions of PROJECT_EXECUTOR + CRUD rights
    PROJECT_DEVELOPER = 3;

    // this role can do everything. The creator of a project is set automatically as PROJECT_ADMIN of it.
    PROJECT_ADMIN = 4;

    // This role can do nothing.  Used to set a user as inactive inside a project
    PROJECT_INACTIVE = 5;
}

// Structure of project role view
enum ProjectRoleView {

    // The view depends on the endpoint:
    // * CreateProjectRole: FULL
    // * GetProjectRole: FULL
    // * UpdateProjectRole: FULL
    // * ListProjectRoles: FULL
    PROJECT_ROLE_VIEW_UNSPECIFIED = 0;

    // only role ID and name fields are populated
    PROJECT_ROLE_VIEW_SHALLOW = 1;

    // all fields including permissions are populated
    PROJECT_ROLE_VIEW_FULL = 2;
}

// This message is a request to create project role
message CreateProjectRoleRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    //If the role_id is not provided, an incremental value will be assigned
    //The "name" and "role_type" are mandatory values
    //The permissions all default to False if not provided specifically
    ProjectRole role = 2;

    // Optional. specify the view of the created project role, PROJECT_ROLE_VIEW_FULL by default
    ProjectRoleView project_role_view = 3;
}

// This message is a request to update project role
message UpdateProjectRoleRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    //role_id in the Role message should be given, if empty will throw an error in the backend
    //other fields in the Role are optional. Only the fields to be updated should be provided
    ProjectRole role = 2;

    // Optional. The mask to control which fields get updated.
    google.protobuf.FieldMask update_mask = 3;

    // Optional. specify the view of the updated project role, PROJECT_ROLE_VIEW_FULL by default
    ProjectRoleView project_role_view = 4;
}

// This message is a request to get project role
message GetProjectRoleRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    oneof project_role_identifier {
        // role is identified by role id
        uint32 role_id = 2;
        // role can also be uniquely identified by its name
        string role_name = 3;
    }

    // Optional. specify the view of the project role, PROJECT_ROLE_VIEW_FULL by default
    ProjectRoleView project_role_view = 4;
}

// This message is a request to delete project role
message DeleteProjectRoleRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    //role is identified by role id, if empty will throw an error in the backend
    uint32 role_id = 2;
}

// This message is a request to list project role
message ListProjectRolesRequest {

    // Required. The project that the agent to fetch is associated with.
    // Format: <pre><code>projects/&lt;project_uuid&gt;/agents</code></pre>
    string parent = 1;

    // Optional: The page token to support pagination.
    // Pagination allows you to retrieve a large result set in smaller, more manageable portions.
    // The page token is a string representing the current index and page size.
    //
    // Valid page token strings:
    // * "" (empty string) - Retrieves the first page.
    // * "current_index-0--page_size-20" - Retrieves the first page with a page size of 20.
    // * "current_index-1--page_size-20" - Retrieves the second page with a page size of 20.
    //
    // Index starts at 0.
    //
    // Examples of valid page token strings:
    // * ""
    // * "current_index-0--page_size-20"
    // * "current_index-1--page_size-20"
    // * "current_index-10--page_size-20"
    //
    // Examples of invalid page token strings:
    // * "1"
    // * "current_index-0--page_size-20"
    // * "current_index--1--page_size-20"
    // * "current_index1--page_size-20"
    // * "current_index-1--page_size--20"
    string page_token = 2;

    // Optional. specify the view of the project roles, PROJECT_ROLE_VIEW_FULL by default
    ProjectRoleView project_role_view = 3;
}

// This message is a response of listing project role
message ListProjectRolesResponse {
    // The list of project roles. There will be a maximum number of items
    // returned based on the page_token field in the request.
    repeated ProjectRole project_roles = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    string next_page_token = 2;
}
